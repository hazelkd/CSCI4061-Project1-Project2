(TEST 18) cmdcol_update_state_2
COMMENTS:

program: ./test_cmd cmdcol_update_state_2
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-18-expect.tmp
- Actual output in: test-results/raw/functions-18-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                  ==== ACTUAL ====                                               
{                                                                 {
    // Adds several commands to a collection, starts those            // Adds several commands to a collection, starts those
    // commands, then blocks for updates on all commands              // commands, then blocks for updates on all commands
    // via cmdcol_update_state(). Should produce alerts               // via cmdcol_update_state(). Should produce alerts
    // that all of the children have finished and there               // that all of the children have finished and there
    // should be alerts for all children.                             // should be alerts for all children.
    char *children[][5] = {                                           char *children[][5] = {
      {"cat","test_data/quote.txt",NULL},                               {"cat","test_data/quote.txt",NULL},    
      {"ls","-a","test_data/stuff",NULL},                               {"ls","-a","test_data/stuff",NULL},
      {"grep","-i", "flurbo ","test_data/gettysburg.txt",NULL},         {"grep","-i", "flurbo ","test_data/gettysburg.txt",NULL},
      {"ls","-a","-F","test_data/stuff",NULL},                          {"ls","-a","-F","test_data/stuff",NULL},
      {"gcc","-o","test_data/print_args",                               {"gcc","-o","test_data/print_args",
                   "test_data/print_args.c",NULL},                                   "test_data/print_args.c",NULL},
      {NULL},                                                           {NULL},
    };                                                                };
    cmdcol_t cmdcol_actual = {};                                      cmdcol_t cmdcol_actual = {};
    cmdcol_t *cmdcol = &cmdcol_actual;                                cmdcol_t *cmdcol = &cmdcol_actual;
    for(int i=0; children[i][0] != NULL; i++){                        for(int i=0; children[i][0] != NULL; i++){
      cmd_t *cmd = cmd_new(children[i]);                                cmd_t *cmd = cmd_new(children[i]);
      cmdcol_add(cmdcol, cmd);                                          cmdcol_add(cmdcol, cmd);
      cmd_start(cmd);                                                   cmd_start(cmd);
    }                                                                 }
    cmdcol_update_state(cmdcol, DOBLOCK);                             cmdcol_update_state(cmdcol, DOBLOCK);
    cmdcol_freeall(cmdcol);                                           cmdcol_freeall(cmdcol);
}                                                                 }
ALERTS:                                                           ALERTS:
@!!! cat[%0]: EXIT(0)                                           <
@!!! ls[%1]: EXIT(0)                                            <
@!!! grep[%2]: EXIT(1)                                          <
@!!! ls[%3]: EXIT(0)                                            <
@!!! gcc[%4]: EXIT(0)                                           <
                                                                <
--- Line Differences ---
EXPECT:  27) @!!! cat[%0]: EXIT(0)
EXPECT:  28) @!!! ls[%1]: EXIT(0)
EXPECT:  29) @!!! grep[%2]: EXIT(1)
EXPECT:  30) @!!! ls[%3]: EXIT(0)
EXPECT:  31) @!!! gcc[%4]: EXIT(0)
EXPECT:  32) 

--- Valgrind Log from: test-results/raw/functions-18-valgrd.tmp ---
==2845432== Memcheck, a memory error detector
==2845432== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2845432== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2845432== Command: ./test_cmd cmdcol_update_state_2
==2845432== Parent PID: 2845431
==2845432== 
==2845432== Invalid write of size 8
==2845432==    at 0x10B26B: cmd_new (cmd.c:7)
==2845432==    by 0x10AD47: main (test_cmd.c:433)
==2845432==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2845432== 
==2845432== 
==2845432== Process terminating with default action of signal 11 (SIGSEGV)
==2845432==  Access not within mapped region at address 0x100
==2845432==    at 0x10B26B: cmd_new (cmd.c:7)
==2845432==    by 0x10AD47: main (test_cmd.c:433)
==2845432==  If you believe this happened as a result of a stack
==2845432==  overflow in your program's main thread (unlikely but
==2845432==  possible), you can try to increase the size of the
==2845432==  main thread stack using the --main-stacksize= flag.
==2845432==  The main thread stack size used in this run was 8388608.
==2845432== 
==2845432== HEAP SUMMARY:
==2845432==     in use at exit: 9 bytes in 1 blocks
==2845432==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2845432== 
==2845432== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2845432==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2845432==    by 0x10B263: cmd_new (cmd.c:7)
==2845432==    by 0x10AD47: main (test_cmd.c:433)
==2845432== 
==2845432== LEAK SUMMARY:
==2845432==    definitely lost: 9 bytes in 1 blocks
==2845432==    indirectly lost: 0 bytes in 0 blocks
==2845432==      possibly lost: 0 bytes in 0 blocks
==2845432==    still reachable: 0 bytes in 0 blocks
==2845432==         suppressed: 0 bytes in 0 blocks
==2845432== 
==2845432== For lists of detected and suppressed errors, rerun with: -s
==2845432== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

