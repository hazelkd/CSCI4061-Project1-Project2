(TEST 7) read_all_1
COMMENTS:

program: ./test_cmd read_all_1
Failure messages:
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-07-expect.tmp
- Actual output in: test-results/raw/functions-07-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                       ==== ACTUAL ====                                                    
{                                                                      {
    // Tests the read_all() function to ensure that                        // Tests the read_all() function to ensure that
    // it properly accumulates all data from an                            // it properly accumulates all data from an
    // arbitrary input FD including allocating memory                      // arbitrary input FD including allocating memory
    // for the data.                                                       // for the data.
    //                                                                     // 
    // NOTE: read_all() should null-terminate the                          // NOTE: read_all() should null-terminate the
    // strings it reads and Valgrind might report                          // strings it reads and Valgrind might report
    // "Uninitialized Data" if no '\0' character is                        // "Uninitialized Data" if no '\0' character is
    // placed in the character array that is                               // placed in the character array that is
    // returned.                                                           // returned.
    int fd = open("test_data/quote.txt", O_RDONLY);                        int fd = open("test_data/quote.txt", O_RDONLY);
    int bytes_read = -1;                                                   int bytes_read = -1;
    char *actual_read = read_all(fd, &bytes_read);                         char *actual_read = read_all(fd, &bytes_read);
    int result = close(fd);                                                int result = close(fd);
    printf("result: %d\n", result);                                        printf("result: %d\n", result);
    printf("bytes_read: %d\n", bytes_read);                                printf("bytes_read: %d\n", bytes_read);
    printf("actual_read:\n" );                                             printf("actual_read:\n" );
    printf("--------------------\n" );                                     printf("--------------------\n" );
    printf("%s",actual_read);                                              printf("%s",actual_read);
    printf("--------------------\n" );                                     printf("--------------------\n" );
    free(actual_read);                                                     free(actual_read);
}                                                                      }
result: 0                                                              result: 0
bytes_read: 125                                                      | bytes_read: -1
actual_read:                                                           actual_read:
--------------------                                                   --------------------
Object-oriented programming is an exceptionally bad idea which could <
only have originated in California.                                  <
                                                                     <
-- Edsger Dijkstra                                                   <
--------------------                                                   --------------------
ALERTS:                                                                ALERTS:
--- Line Differences ---
EXPECT:  25) bytes_read: 125
ACTUAL:  25) bytes_read: -1
EXPECT:  28) Object-oriented programming is an exceptionally bad idea which could
EXPECT:  29) only have originated in California.
EXPECT:  30) 
EXPECT:  31) -- Edsger Dijkstra

--- Valgrind Log from: test-results/raw/functions-07-valgrd.tmp ---
==2844961== Memcheck, a memory error detector
==2844961== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2844961== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2844961== Command: ./test_cmd read_all_1
==2844961== Parent PID: 2844960
==2844961== 
==2844961== 
==2844961== HEAP SUMMARY:
==2844961==     in use at exit: 0 bytes in 0 blocks
==2844961==   total heap usage: 5 allocs, 5 frees, 31 bytes allocated
==2844961== 
==2844961== All heap blocks were freed -- no leaks are possible
==2844961== 
==2844961== For lists of detected and suppressed errors, rerun with: -s
==2844961== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

