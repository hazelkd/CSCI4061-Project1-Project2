(TEST 19) Stress 1
COMMENTS:
Runs several commands with larger outputs and different run times.


program: ./commando --echo
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-19-expect.tmp
- Actual output in: test-results/raw/commando-19-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                  ==== ACTUAL ====                                               
@> test_data/table.sh 50 2                                      <
@> test_data/table.sh 40 0                                      <
@> sleep 2                                                      <
@> list                                                         <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                     <
0    %0          -1        RUN   -1 test_data/table.sh 50 2     <
1    %1          -1        RUN   -1 test_data/table.sh 40 0     <
2    %2          -1        RUN   -1 sleep 2                     <
@> cat test_data/print_args.c                                   <
@> pause 0 1                                                    <
@> output-for 1                                                 <
@<<< Output for test_data/table.sh[%1] (1520 bytes):            <
----------------------------------------                        <
i^1=      1  i^2=      1  i^3=      1                           <
i^1=      2  i^2=      4  i^3=      8                           <
i^1=      3  i^2=      9  i^3=     27                           <
i^1=      4  i^2=     16  i^3=     64                           <
i^1=      5  i^2=     25  i^3=    125                           <
i^1=      6  i^2=     36  i^3=    216                           <
i^1=      7  i^2=     49  i^3=    343                           <
i^1=      8  i^2=     64  i^3=    512                           <
i^1=      9  i^2=     81  i^3=    729                           <
i^1=     10  i^2=    100  i^3=   1000                           <
i^1=     11  i^2=    121  i^3=   1331                           <
i^1=     12  i^2=    144  i^3=   1728                           <
i^1=     13  i^2=    169  i^3=   2197                           <
i^1=     14  i^2=    196  i^3=   2744                           <
i^1=     15  i^2=    225  i^3=   3375                           <
i^1=     16  i^2=    256  i^3=   4096                           <
i^1=     17  i^2=    289  i^3=   4913                           <
i^1=     18  i^2=    324  i^3=   5832                           <
i^1=     19  i^2=    361  i^3=   6859                           <
i^1=     20  i^2=    400  i^3=   8000                           <
i^1=     21  i^2=    441  i^3=   9261                           <
i^1=     22  i^2=    484  i^3=  10648                           <
i^1=     23  i^2=    529  i^3=  12167                           <
i^1=     24  i^2=    576  i^3=  13824                           <
i^1=     25  i^2=    625  i^3=  15625                           <
i^1=     26  i^2=    676  i^3=  17576                           <
i^1=     27  i^2=    729  i^3=  19683                           <
i^1=     28  i^2=    784  i^3=  21952                           <
i^1=     29  i^2=    841  i^3=  24389                           <
i^1=     30  i^2=    900  i^3=  27000                           <
i^1=     31  i^2=    961  i^3=  29791                           <
i^1=     32  i^2=   1024  i^3=  32768                           <
i^1=     33  i^2=   1089  i^3=  35937                           <
i^1=     34  i^2=   1156  i^3=  39304                           <
i^1=     35  i^2=   1225  i^3=  42875                           <
i^1=     36  i^2=   1296  i^3=  46656                           <
i^1=     37  i^2=   1369  i^3=  50653                           <
i^1=     38  i^2=   1444  i^3=  54872                           <
i^1=     39  i^2=   1521  i^3=  59319                           <
i^1=     40  i^2=   1600  i^3=  64000                           <
----------------------------------------                        <
@> output-all                                                   <
@<<< Output for test_data/table.sh[%0] (-1 bytes):              <
----------------------------------------                        <
test_data/table.sh[%0] : output not ready                       <
----------------------------------------                        <
@<<< Output for test_data/table.sh[%1] (1520 bytes):            <
----------------------------------------                        <
i^1=      1  i^2=      1  i^3=      1                           <
i^1=      2  i^2=      4  i^3=      8                           <
i^1=      3  i^2=      9  i^3=     27                           <
i^1=      4  i^2=     16  i^3=     64                           <
i^1=      5  i^2=     25  i^3=    125                           <
i^1=      6  i^2=     36  i^3=    216                           <
i^1=      7  i^2=     49  i^3=    343                           <
i^1=      8  i^2=     64  i^3=    512                           <
i^1=      9  i^2=     81  i^3=    729                           <
i^1=     10  i^2=    100  i^3=   1000                           <
i^1=     11  i^2=    121  i^3=   1331                           <
i^1=     12  i^2=    144  i^3=   1728                           <
i^1=     13  i^2=    169  i^3=   2197                           <
i^1=     14  i^2=    196  i^3=   2744                           <
i^1=     15  i^2=    225  i^3=   3375                           <
i^1=     16  i^2=    256  i^3=   4096                           <
i^1=     17  i^2=    289  i^3=   4913                           <
i^1=     18  i^2=    324  i^3=   5832                           <
i^1=     19  i^2=    361  i^3=   6859                           <
i^1=     20  i^2=    400  i^3=   8000                           <
i^1=     21  i^2=    441  i^3=   9261                           <
i^1=     22  i^2=    484  i^3=  10648                           <
i^1=     23  i^2=    529  i^3=  12167                           <
i^1=     24  i^2=    576  i^3=  13824                           <
i^1=     25  i^2=    625  i^3=  15625                           <
i^1=     26  i^2=    676  i^3=  17576                           <
i^1=     27  i^2=    729  i^3=  19683                           <
i^1=     28  i^2=    784  i^3=  21952                           <
i^1=     29  i^2=    841  i^3=  24389                           <
i^1=     30  i^2=    900  i^3=  27000                           <
i^1=     31  i^2=    961  i^3=  29791                           <
i^1=     32  i^2=   1024  i^3=  32768                           <
i^1=     33  i^2=   1089  i^3=  35937                           <
i^1=     34  i^2=   1156  i^3=  39304                           <
i^1=     35  i^2=   1225  i^3=  42875                           <
i^1=     36  i^2=   1296  i^3=  46656                           <
i^1=     37  i^2=   1369  i^3=  50653                           <
i^1=     38  i^2=   1444  i^3=  54872                           <
i^1=     39  i^2=   1521  i^3=  59319                           <
i^1=     40  i^2=   1600  i^3=  64000                           <
----------------------------------------                        <
@<<< Output for sleep[%2] (-1 bytes):                           <
----------------------------------------                        <
sleep[%2] : output not ready                                    <
----------------------------------------                        <
@<<< Output for cat[%3] (218 bytes):                            <
----------------------------------------                        <
// Print all the arguments in the argv array                    <
                                                                <
#include <stdio.h>                                              <
                                                                <
int main(int argc, char *argv[]){                               <
  printf("%d args received\n",argc);                            <
  for(int i=0; i<argc; i++){                                    <
    printf("%d: %s\n",i,argv[i]);                               <
  }                                                             <
  return 0;                                                     <
}                                                               <
----------------------------------------                        <
@> list                                                         <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                     <
0    %0          -1        RUN   -1 test_data/table.sh 50 2     <
1    %1           0    EXIT(0) 1520 test_data/table.sh 40 0     <
2    %2          -1        RUN   -1 sleep 2                     <
3    %3           0    EXIT(0)  218 cat test_data/print_args.c  <
@> wait-all                                                     <
@> list                                                         <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                     <
0    %0           0    EXIT(0) 1900 test_data/table.sh 50 2     <
1    %1           0    EXIT(0) 1520 test_data/table.sh 40 0     <
2    %2           0    EXIT(0)    0 sleep 2                     <
3    %3           0    EXIT(0)  218 cat test_data/print_args.c  <
@> exit                                                         <
ALERTS:                                                           ALERTS:
@!!! test_data/table.sh[%1]: EXIT(0)                            <
@!!! cat[%3]: EXIT(0)                                           <
@!!! test_data/table.sh[%0]: EXIT(0)                            <
@!!! sleep[%2]: EXIT(0)                                         <
                                                                <
--- Line Differences ---
EXPECT:   1) @> test_data/table.sh 50 2
EXPECT:   2) @> test_data/table.sh 40 0
EXPECT:   3) @> sleep 2
EXPECT:   4) @> list
EXPECT:   5) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:   6) 0    %0          -1        RUN   -1 test_data/table.sh 50 2 
EXPECT:   7) 1    %1          -1        RUN   -1 test_data/table.sh 40 0 
EXPECT:   8) 2    %2          -1        RUN   -1 sleep 2 
EXPECT:   9) @> cat test_data/print_args.c
EXPECT:  10) @> pause 0 1
EXPECT:  11) @> output-for 1
EXPECT:  12) @<<< Output for test_data/table.sh[%1] (1520 bytes):
EXPECT:  13) ----------------------------------------
EXPECT:  14) i^1=      1  i^2=      1  i^3=      1
EXPECT:  15) i^1=      2  i^2=      4  i^3=      8
EXPECT:  16) i^1=      3  i^2=      9  i^3=     27
EXPECT:  17) i^1=      4  i^2=     16  i^3=     64
EXPECT:  18) i^1=      5  i^2=     25  i^3=    125
EXPECT:  19) i^1=      6  i^2=     36  i^3=    216
EXPECT:  20) i^1=      7  i^2=     49  i^3=    343
EXPECT:  21) i^1=      8  i^2=     64  i^3=    512
EXPECT:  22) i^1=      9  i^2=     81  i^3=    729
EXPECT:  23) i^1=     10  i^2=    100  i^3=   1000
EXPECT:  24) i^1=     11  i^2=    121  i^3=   1331
EXPECT:  25) i^1=     12  i^2=    144  i^3=   1728
EXPECT:  26) i^1=     13  i^2=    169  i^3=   2197
EXPECT:  27) i^1=     14  i^2=    196  i^3=   2744
EXPECT:  28) i^1=     15  i^2=    225  i^3=   3375
EXPECT:  29) i^1=     16  i^2=    256  i^3=   4096
EXPECT:  30) i^1=     17  i^2=    289  i^3=   4913
EXPECT:  31) i^1=     18  i^2=    324  i^3=   5832
EXPECT:  32) i^1=     19  i^2=    361  i^3=   6859
EXPECT:  33) i^1=     20  i^2=    400  i^3=   8000
EXPECT:  34) i^1=     21  i^2=    441  i^3=   9261
EXPECT:  35) i^1=     22  i^2=    484  i^3=  10648
EXPECT:  36) i^1=     23  i^2=    529  i^3=  12167
EXPECT:  37) i^1=     24  i^2=    576  i^3=  13824
EXPECT:  38) i^1=     25  i^2=    625  i^3=  15625
EXPECT:  39) i^1=     26  i^2=    676  i^3=  17576
EXPECT:  40) i^1=     27  i^2=    729  i^3=  19683
EXPECT:  41) i^1=     28  i^2=    784  i^3=  21952
EXPECT:  42) i^1=     29  i^2=    841  i^3=  24389
EXPECT:  43) i^1=     30  i^2=    900  i^3=  27000
EXPECT:  44) i^1=     31  i^2=    961  i^3=  29791
EXPECT:  45) i^1=     32  i^2=   1024  i^3=  32768
EXPECT:  46) i^1=     33  i^2=   1089  i^3=  35937
EXPECT:  47) i^1=     34  i^2=   1156  i^3=  39304
EXPECT:  48) i^1=     35  i^2=   1225  i^3=  42875
EXPECT:  49) i^1=     36  i^2=   1296  i^3=  46656
EXPECT:  50) i^1=     37  i^2=   1369  i^3=  50653
EXPECT:  51) i^1=     38  i^2=   1444  i^3=  54872
EXPECT:  52) i^1=     39  i^2=   1521  i^3=  59319
EXPECT:  53) i^1=     40  i^2=   1600  i^3=  64000
EXPECT:  54) ----------------------------------------
EXPECT:  55) @> output-all
EXPECT:  56) @<<< Output for test_data/table.sh[%0] (-1 bytes):
EXPECT:  57) ----------------------------------------
EXPECT:  58) test_data/table.sh[%0] : output not ready
EXPECT:  59) ----------------------------------------
EXPECT:  60) @<<< Output for test_data/table.sh[%1] (1520 bytes):
EXPECT:  61) ----------------------------------------
EXPECT:  62) i^1=      1  i^2=      1  i^3=      1
EXPECT:  63) i^1=      2  i^2=      4  i^3=      8
EXPECT:  64) i^1=      3  i^2=      9  i^3=     27
EXPECT:  65) i^1=      4  i^2=     16  i^3=     64
EXPECT:  66) i^1=      5  i^2=     25  i^3=    125
EXPECT:  67) i^1=      6  i^2=     36  i^3=    216
EXPECT:  68) i^1=      7  i^2=     49  i^3=    343
EXPECT:  69) i^1=      8  i^2=     64  i^3=    512
EXPECT:  70) i^1=      9  i^2=     81  i^3=    729
EXPECT:  71) i^1=     10  i^2=    100  i^3=   1000
EXPECT:  72) i^1=     11  i^2=    121  i^3=   1331
EXPECT:  73) i^1=     12  i^2=    144  i^3=   1728
EXPECT:  74) i^1=     13  i^2=    169  i^3=   2197
EXPECT:  75) i^1=     14  i^2=    196  i^3=   2744
EXPECT:  76) i^1=     15  i^2=    225  i^3=   3375
EXPECT:  77) i^1=     16  i^2=    256  i^3=   4096
EXPECT:  78) i^1=     17  i^2=    289  i^3=   4913
EXPECT:  79) i^1=     18  i^2=    324  i^3=   5832
EXPECT:  80) i^1=     19  i^2=    361  i^3=   6859
EXPECT:  81) i^1=     20  i^2=    400  i^3=   8000
EXPECT:  82) i^1=     21  i^2=    441  i^3=   9261
EXPECT:  83) i^1=     22  i^2=    484  i^3=  10648
EXPECT:  84) i^1=     23  i^2=    529  i^3=  12167
EXPECT:  85) i^1=     24  i^2=    576  i^3=  13824
EXPECT:  86) i^1=     25  i^2=    625  i^3=  15625
EXPECT:  87) i^1=     26  i^2=    676  i^3=  17576
EXPECT:  88) i^1=     27  i^2=    729  i^3=  19683
EXPECT:  89) i^1=     28  i^2=    784  i^3=  21952
EXPECT:  90) i^1=     29  i^2=    841  i^3=  24389
EXPECT:  91) i^1=     30  i^2=    900  i^3=  27000
EXPECT:  92) i^1=     31  i^2=    961  i^3=  29791
EXPECT:  93) i^1=     32  i^2=   1024  i^3=  32768
EXPECT:  94) i^1=     33  i^2=   1089  i^3=  35937
EXPECT:  95) i^1=     34  i^2=   1156  i^3=  39304
EXPECT:  96) i^1=     35  i^2=   1225  i^3=  42875
EXPECT:  97) i^1=     36  i^2=   1296  i^3=  46656
EXPECT:  98) i^1=     37  i^2=   1369  i^3=  50653
EXPECT:  99) i^1=     38  i^2=   1444  i^3=  54872
EXPECT: 100) i^1=     39  i^2=   1521  i^3=  59319
EXPECT: 101) i^1=     40  i^2=   1600  i^3=  64000
EXPECT: 102) ----------------------------------------
EXPECT: 103) @<<< Output for sleep[%2] (-1 bytes):
EXPECT: 104) ----------------------------------------
EXPECT: 105) sleep[%2] : output not ready
EXPECT: 106) ----------------------------------------
EXPECT: 107) @<<< Output for cat[%3] (218 bytes):
EXPECT: 108) ----------------------------------------
EXPECT: 109) // Print all the arguments in the argv array
EXPECT: 110) 
EXPECT: 111) #include <stdio.h>
EXPECT: 112) 
EXPECT: 113) int main(int argc, char *argv[]){
EXPECT: 114)   printf("%d args received\n",argc);
EXPECT: 115)   for(int i=0; i<argc; i++){
EXPECT: 116)     printf("%d: %s\n",i,argv[i]);
EXPECT: 117)   }
EXPECT: 118)   return 0;
EXPECT: 119) }
EXPECT: 120) ----------------------------------------
EXPECT: 121) @> list
EXPECT: 122) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT: 123) 0    %0          -1        RUN   -1 test_data/table.sh 50 2 
EXPECT: 124) 1    %1           0    EXIT(0) 1520 test_data/table.sh 40 0 
EXPECT: 125) 2    %2          -1        RUN   -1 sleep 2 
EXPECT: 126) 3    %3           0    EXIT(0)  218 cat test_data/print_args.c 
EXPECT: 127) @> wait-all
EXPECT: 128) @> list
EXPECT: 129) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT: 130) 0    %0           0    EXIT(0) 1900 test_data/table.sh 50 2 
EXPECT: 131) 1    %1           0    EXIT(0) 1520 test_data/table.sh 40 0 
EXPECT: 132) 2    %2           0    EXIT(0)    0 sleep 2 
EXPECT: 133) 3    %3           0    EXIT(0)  218 cat test_data/print_args.c 
EXPECT: 134) @> exit
EXPECT: 136) @!!! test_data/table.sh[%1]: EXIT(0)
EXPECT: 137) @!!! cat[%3]: EXIT(0)
EXPECT: 138) @!!! test_data/table.sh[%0]: EXIT(0)
EXPECT: 139) @!!! sleep[%2]: EXIT(0)
EXPECT: 140) 

--- Valgrind Log from: test-results/raw/commando-19-valgrd.tmp ---
==516459== Memcheck, a memory error detector
==516459== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==516459== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==516459== Command: ./commando --echo
==516459== Parent PID: 516458
==516459== 
==516459== Conditional jump or move depends on uninitialised value(s)
==516459==    at 0x109A7F: cmd_new (cmd.c:12)
==516459==    by 0x10954C: main (commando.c:13)
==516459==  Uninitialised value was created by a stack allocation
==516459==    at 0x1094D9: main (commando.c:6)
==516459== 
==516459== Conditional jump or move depends on uninitialised value(s)
==516459==    at 0x109AE4: cmd_new (cmd.c:21)
==516459==    by 0x10954C: main (commando.c:13)
==516459==  Uninitialised value was created by a stack allocation
==516459==    at 0x1094D9: main (commando.c:6)
==516459== 
==516459== Invalid read of size 4
==516459==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==516459==    by 0x10956C: main (commando.c:14)
==516459==  Address 0x2000 is not stack'd, malloc'd or (recently) free'd
==516459== 
==516459== 
==516459== Process terminating with default action of signal 11 (SIGSEGV)
==516459==  Access not within mapped region at address 0x2000
==516459==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==516459==    by 0x10956C: main (commando.c:14)
==516459==  If you believe this happened as a result of a stack
==516459==  overflow in your program's main thread (unlikely but
==516459==  possible), you can try to increase the size of the
==516459==  main thread stack using the --main-stacksize= flag.
==516459==  The main thread stack size used in this run was 8388608.
==516459== 
==516459== HEAP SUMMARY:
==516459==     in use at exit: 2,352 bytes in 1 blocks
==516459==   total heap usage: 1 allocs, 0 frees, 2,352 bytes allocated
==516459== 
==516459== 2,352 bytes in 1 blocks are still reachable in loss record 1 of 1
==516459==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==516459==    by 0x109A50: cmd_new (cmd.c:8)
==516459==    by 0x10954C: main (commando.c:13)
==516459== 
==516459== LEAK SUMMARY:
==516459==    definitely lost: 0 bytes in 0 blocks
==516459==    indirectly lost: 0 bytes in 0 blocks
==516459==      possibly lost: 0 bytes in 0 blocks
==516459==    still reachable: 2,352 bytes in 1 blocks
==516459==         suppressed: 0 bytes in 0 blocks
==516459== 
==516459== For lists of detected and suppressed errors, rerun with: -s
==516459== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

