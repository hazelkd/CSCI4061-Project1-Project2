(TEST 12) cmd_update_3
COMMENTS:

program: ./test_cmd cmd_update_3
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-12-expect.tmp
- Actual output in: test-results/raw/functions-12-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                            ==== ACTUAL ====                                         
{                                                           {
    // Tests whether cmd_update() correctly checks              // Tests whether cmd_update() correctly checks
    // on a running command and blocks the calling              // on a running command and blocks the calling
    // process until the cmd is finished. Then checks           // process until the cmd is finished. Then checks
    // that the cmd_t is updated correctly based on             // that the cmd_t is updated correctly based on
    // completion of the cmd.                                   // completion of the cmd.
    // NOTE: This command returns an exit code of 1 so          // NOTE: This command returns an exit code of 1 so
    // cmd->status=1  and  cmd->str_status="EXIT(1)"            // cmd->status=1  and  cmd->str_status="EXIT(1)"
    char *argv[] = {                                            char *argv[] = {
      "grep",                                                     "grep",
      "-i",                                                       "-i",
      "schmeckles",                                               "schmeckles",
      "test_data/gettysburg.txt",                                 "test_data/gettysburg.txt",
      NULL                                                        NULL
    };                                                          };
    cmd_t *cmd = cmd_new(argv);                                 cmd_t *cmd = cmd_new(argv);
    cmd_start(cmd);                // start running             cmd_start(cmd);                // start running
    cmd_update_state(cmd,DOBLOCK); // wait for completion       cmd_update_state(cmd,DOBLOCK); // wait for completion
                                   // should see an alert                                      // should see an alert
    test_print_cmd(cmd);           // show completed cmd        test_print_cmd(cmd);           // show completed cmd
    cmd_free(cmd);                                              cmd_free(cmd);
}                                                           }
cmd->name: grep                                           <
cmd->argv[]:                                              <
  [  0] : grep                                            <
  [  1] : -i                                              <
  [  2] : schmeckles                                      <
  [  3] : test_data/gettysburg.txt                        <
  [  4] : (null)                                          <
cmd->pid > 0 : yes                                        <
cmd->pid: %0                                              <
cmd->out_pipe[PREAD]  > 0: yes                            <
cmd->out_pipe[PWRITE] > 0: yes                            <
cmd->status: 1                                            <
cmd->str_status: EXIT(1)                                  <
cmd->finished: 1                                          <
cmd->output_size: 0                                       <
cmd->output:                                              <
                                                          <
ALERTS:                                                     ALERTS:
@!!! grep[%0]: EXIT(1)                                    <
                                                          <
--- Line Differences ---
EXPECT:  23) cmd->name: grep
EXPECT:  24) cmd->argv[]:
EXPECT:  25)   [  0] : grep
EXPECT:  26)   [  1] : -i
EXPECT:  27)   [  2] : schmeckles
EXPECT:  28)   [  3] : test_data/gettysburg.txt
EXPECT:  29)   [  4] : (null)
EXPECT:  30) cmd->pid > 0 : yes
EXPECT:  31) cmd->pid: %0
EXPECT:  32) cmd->out_pipe[PREAD]  > 0: yes
EXPECT:  33) cmd->out_pipe[PWRITE] > 0: yes
EXPECT:  34) cmd->status: 1
EXPECT:  35) cmd->str_status: EXIT(1)
EXPECT:  36) cmd->finished: 1
EXPECT:  37) cmd->output_size: 0
EXPECT:  38) cmd->output:
EXPECT:  39) 
EXPECT:  41) @!!! grep[%0]: EXIT(1)
EXPECT:  42) 

--- Valgrind Log from: test-results/raw/functions-12-valgrd.tmp ---
==2845169== Memcheck, a memory error detector
==2845169== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2845169== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2845169== Command: ./test_cmd cmd_update_3
==2845169== Parent PID: 2845168
==2845169== 
==2845169== Invalid write of size 8
==2845169==    at 0x10B26B: cmd_new (cmd.c:7)
==2845169==    by 0x10A300: main (test_cmd.c:293)
==2845169==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2845169== 
==2845169== 
==2845169== Process terminating with default action of signal 11 (SIGSEGV)
==2845169==  Access not within mapped region at address 0x100
==2845169==    at 0x10B26B: cmd_new (cmd.c:7)
==2845169==    by 0x10A300: main (test_cmd.c:293)
==2845169==  If you believe this happened as a result of a stack
==2845169==  overflow in your program's main thread (unlikely but
==2845169==  possible), you can try to increase the size of the
==2845169==  main thread stack using the --main-stacksize= flag.
==2845169==  The main thread stack size used in this run was 8388608.
==2845169== 
==2845169== HEAP SUMMARY:
==2845169==     in use at exit: 9 bytes in 1 blocks
==2845169==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2845169== 
==2845169== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2845169==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2845169==    by 0x10B263: cmd_new (cmd.c:7)
==2845169==    by 0x10A300: main (test_cmd.c:293)
==2845169== 
==2845169== LEAK SUMMARY:
==2845169==    definitely lost: 9 bytes in 1 blocks
==2845169==    indirectly lost: 0 bytes in 0 blocks
==2845169==      possibly lost: 0 bytes in 0 blocks
==2845169==    still reachable: 0 bytes in 0 blocks
==2845169==         suppressed: 0 bytes in 0 blocks
==2845169== 
==2845169== For lists of detected and suppressed errors, rerun with: -s
==2845169== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

