(TEST 17) cmdcol_update_state_1
COMMENTS:

program: ./test_cmd cmdcol_update_state_1
Failure messages:
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-17-expect.tmp
- Actual output in: test-results/raw/functions-17-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                             ==== ACTUAL ====                                          
{                                                            {
    // Adds several commands to a collection, starts those       // Adds several commands to a collection, starts those
    // commands, then blocks for updates on all commands         // commands, then blocks for updates on all commands
    // via cmdcol_update_state(). Should produce alerts          // via cmdcol_update_state(). Should produce alerts
    // that all of the children have finished and there          // that all of the children have finished and there
    // should be alerts for all children.                        // should be alerts for all children.
    char *children[][5] = {                                      char *children[][5] = {
      {"cat","test_data/quote.txt",NULL},                          {"cat","test_data/quote.txt",NULL},    
      {"ls","-a","test_data/stuff",NULL},                          {"ls","-a","test_data/stuff",NULL},
      {"ls","-a","-F","test_data/stuff",NULL},                     {"ls","-a","-F","test_data/stuff",NULL},
      {NULL},                                                      {NULL},
    };                                                           };
    cmdcol_t cmdcol_actual = {};                                 cmdcol_t cmdcol_actual = {};
    cmdcol_t *cmdcol = &cmdcol_actual;                           cmdcol_t *cmdcol = &cmdcol_actual;
    for(int i=0; children[i][0] != NULL; i++){                   for(int i=0; children[i][0] != NULL; i++){
      cmd_t *cmd = cmd_new(children[i]);                           cmd_t *cmd = cmd_new(children[i]);
      cmdcol_add(cmdcol, cmd);                                     cmdcol_add(cmdcol, cmd);
      cmd_start(cmd);                                              cmd_start(cmd);
    }                                                            }
    cmdcol_update_state(cmdcol, DOBLOCK);                        cmdcol_update_state(cmdcol, DOBLOCK);
    cmdcol_freeall(cmdcol);                                      cmdcol_freeall(cmdcol);
}                                                            }
                                                           > max size: 1024
                                                           > cur pos: 125 
                                                           > bytes read: 125
                                                           > max size: 1024
                                                           > cur pos: 125 
                                                           > bytes read: 0
                                                           > max size: 1024
                                                           > cur pos: 52 
                                                           > bytes read: 52
                                                           > max size: 1024
                                                           > cur pos: 52 
                                                           > bytes read: 0
                                                           > max size: 1024
                                                           > cur pos: 55 
                                                           > bytes read: 55
                                                           > max size: 1024
                                                           > cur pos: 55 
                                                           > bytes read: 0
ALERTS:                                                      ALERTS:
@!!! cat[%0]: EXIT(0)                                        @!!! cat[%0]: EXIT(0)
@!!! ls[%1]: EXIT(0)                                         @!!! ls[%1]: EXIT(0)
@!!! ls[%2]: EXIT(0)                                         @!!! ls[%2]: EXIT(0)
--- Line Differences ---
ACTUAL:  23) max size: 1024
ACTUAL:  24) cur pos: 125 
ACTUAL:  25) bytes read: 125
ACTUAL:  26) max size: 1024
ACTUAL:  27) cur pos: 125 
ACTUAL:  28) bytes read: 0
ACTUAL:  29) max size: 1024
ACTUAL:  30) cur pos: 52 
ACTUAL:  31) bytes read: 52
ACTUAL:  32) max size: 1024
ACTUAL:  33) cur pos: 52 
ACTUAL:  34) bytes read: 0
ACTUAL:  35) max size: 1024
ACTUAL:  36) cur pos: 55 
ACTUAL:  37) bytes read: 55
ACTUAL:  38) max size: 1024
ACTUAL:  39) cur pos: 55 
ACTUAL:  40) bytes read: 0

--- Valgrind Log from: test-results/raw/functions-17-valgrd.tmp ---
==1360349== Memcheck, a memory error detector
==1360349== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1360349== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1360349== Command: ./test_cmd cmdcol_update_state_1
==1360349== Parent PID: 1360348
==1360349== 
==1360349== 
==1360349== HEAP SUMMARY:
==1360349==     in use at exit: 0 bytes in 0 blocks
==1360349==   total heap usage: 15 allocs, 15 frees, 10,202 bytes allocated
==1360349== 
==1360349== All heap blocks were freed -- no leaks are possible
==1360349== 
==1360349== For lists of detected and suppressed errors, rerun with: -s
==1360349== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

