(TEST 17) cmdcol_update_state_1
COMMENTS:

program: ./test_cmd cmdcol_update_state_1
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-17-expect.tmp
- Actual output in: test-results/raw/functions-17-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                             ==== ACTUAL ====                                          
{                                                            {
    // Adds several commands to a collection, starts those       // Adds several commands to a collection, starts those
    // commands, then blocks for updates on all commands         // commands, then blocks for updates on all commands
    // via cmdcol_update_state(). Should produce alerts          // via cmdcol_update_state(). Should produce alerts
    // that all of the children have finished and there          // that all of the children have finished and there
    // should be alerts for all children.                        // should be alerts for all children.
    char *children[][5] = {                                      char *children[][5] = {
      {"cat","test_data/quote.txt",NULL},                          {"cat","test_data/quote.txt",NULL},    
      {"ls","-a","test_data/stuff",NULL},                          {"ls","-a","test_data/stuff",NULL},
      {"ls","-a","-F","test_data/stuff",NULL},                     {"ls","-a","-F","test_data/stuff",NULL},
      {NULL},                                                      {NULL},
    };                                                           };
    cmdcol_t cmdcol_actual = {};                                 cmdcol_t cmdcol_actual = {};
    cmdcol_t *cmdcol = &cmdcol_actual;                           cmdcol_t *cmdcol = &cmdcol_actual;
    for(int i=0; children[i][0] != NULL; i++){                   for(int i=0; children[i][0] != NULL; i++){
      cmd_t *cmd = cmd_new(children[i]);                           cmd_t *cmd = cmd_new(children[i]);
      cmdcol_add(cmdcol, cmd);                                     cmdcol_add(cmdcol, cmd);
      cmd_start(cmd);                                              cmd_start(cmd);
    }                                                            }
    cmdcol_update_state(cmdcol, DOBLOCK);                        cmdcol_update_state(cmdcol, DOBLOCK);
    cmdcol_freeall(cmdcol);                                      cmdcol_freeall(cmdcol);
}                                                            }
ALERTS:                                                      ALERTS:
@!!! cat[%0]: EXIT(0)                                      <
@!!! ls[%1]: EXIT(0)                                       <
@!!! ls[%2]: EXIT(0)                                       <
--- Line Differences ---
EXPECT:  24) @!!! cat[%0]: EXIT(0)
EXPECT:  25) @!!! ls[%1]: EXIT(0)
EXPECT:  26) @!!! ls[%2]: EXIT(0)

--- Valgrind Log from: test-results/raw/functions-17-valgrd.tmp ---
==2845397== Memcheck, a memory error detector
==2845397== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2845397== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2845397== Command: ./test_cmd cmdcol_update_state_1
==2845397== Parent PID: 2845396
==2845397== 
==2845397== Invalid write of size 8
==2845397==    at 0x10B26B: cmd_new (cmd.c:7)
==2845397==    by 0x10AB08: main (test_cmd.c:406)
==2845397==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2845397== 
==2845397== 
==2845397== Process terminating with default action of signal 11 (SIGSEGV)
==2845397==  Access not within mapped region at address 0x100
==2845397==    at 0x10B26B: cmd_new (cmd.c:7)
==2845397==    by 0x10AB08: main (test_cmd.c:406)
==2845397==  If you believe this happened as a result of a stack
==2845397==  overflow in your program's main thread (unlikely but
==2845397==  possible), you can try to increase the size of the
==2845397==  main thread stack using the --main-stacksize= flag.
==2845397==  The main thread stack size used in this run was 8388608.
==2845397== 
==2845397== HEAP SUMMARY:
==2845397==     in use at exit: 9 bytes in 1 blocks
==2845397==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2845397== 
==2845397== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2845397==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2845397==    by 0x10B263: cmd_new (cmd.c:7)
==2845397==    by 0x10AB08: main (test_cmd.c:406)
==2845397== 
==2845397== LEAK SUMMARY:
==2845397==    definitely lost: 9 bytes in 1 blocks
==2845397==    indirectly lost: 0 bytes in 0 blocks
==2845397==      possibly lost: 0 bytes in 0 blocks
==2845397==    still reachable: 0 bytes in 0 blocks
==2845397==         suppressed: 0 bytes in 0 blocks
==2845397== 
==2845397== For lists of detected and suppressed errors, rerun with: -s
==2845397== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

