(TEST 3) End of Input
COMMENTS:
Checks that if the end of input is reached, the program exits
correctly by printing 'End of input'. End of input is triggered
interactively by pressing 'Ctrl-d' in a terminal. In batch mode, it is
triggered by reaching the end of an input stream (file). In such
cases, C input functions like fgets() return NULL.


program: ./commando --echo
Failure messages:
- FAILURE(13): Valgrind detected errors
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-03-expect.tmp
- Actual output in: test-results/raw/commando-03-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                                        ==== ACTUAL ====                                                                     
@> help                                                                                 @> help
COMMANDO COMMANDS                                                                       COMMANDO COMMANDS 
help               : show this message                                                  help                : show this message
exit               : exit the program                                                   exit                : exit the program
list               : list all jobs that have been started giving information on each    list                : list all jobs that have been started giving information on each
pause nanos secs   : pause for the given number of nanseconds and seconds               pause nanos secs    : pause for the given number of nanseconds and seconds
output-for int     : print the output for given job number                              output-for int      : print the output for given job number
output-all         : print output for all jobs                                          output-all          : print output for all jobs
wait-for int       : wait until the given job number finishes                           wait-for int        : wait until the given job number finishes
wait-all           : wait for all jobs to finish                                        wait-all            : wait for all jobs to finish
command arg1 ...   : non-built-in is run as a job                                       command arg1 ...   : non-built-in is run as a job
@> list                                                                                 @> list
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                             JOB  #PID      STAT   STR_STAT OUTB COMMAND
@>                                                                                    <
End of input                                                                            End of input
ALERTS:                                                                                 ALERTS:
--- Line Differences ---
EXPECT:  14) @> 

--- Valgrind Log from: test-results/raw/commando-03-valgrd.tmp ---
==786410== Memcheck, a memory error detector
==786410== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==786410== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==786410== Command: ./commando --echo
==786410== Parent PID: 786409
==786410== 
==786410== Conditional jump or move depends on uninitialised value(s)
==786410==    at 0x10A390: cmdcol_print (cmdcol.c:30)
==786410==    by 0x1097FB: main (commando.c:49)
==786410==  Uninitialised value was created by a heap allocation
==786410==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==786410==    by 0x10957F: main (commando.c:14)
==786410== 
==786410== Invalid free() / delete / delete[] / realloc()
==786410==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==786410==    by 0x109A69: main (commando.c:87)
==786410==  Address 0x1ffefffe00 is on thread 1's stack
==786410==  in frame #1, created by main (commando.c:6)
==786410== 
==786410== Conditional jump or move depends on uninitialised value(s)
==786410==    at 0x10A3E2: cmdcol_update_state (cmdcol.c:72)
==786410==    by 0x109A89: main (commando.c:89)
==786410==  Uninitialised value was created by a heap allocation
==786410==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==786410==    by 0x10957F: main (commando.c:14)
==786410== 
==786410== Conditional jump or move depends on uninitialised value(s)
==786410==    at 0x10A428: cmdcol_freeall (cmdcol.c:80)
==786410==    by 0x109A98: main (commando.c:91)
==786410==  Uninitialised value was created by a heap allocation
==786410==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==786410==    by 0x10957F: main (commando.c:14)
==786410== 
==786410== 
==786410== HEAP SUMMARY:
==786410==     in use at exit: 8,200 bytes in 1 blocks
==786410==   total heap usage: 4 allocs, 4 frees, 8,687 bytes allocated
==786410== 
==786410== 8,200 bytes in 1 blocks are definitely lost in loss record 1 of 1
==786410==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==786410==    by 0x10957F: main (commando.c:14)
==786410== 
==786410== LEAK SUMMARY:
==786410==    definitely lost: 8,200 bytes in 1 blocks
==786410==    indirectly lost: 0 bytes in 0 blocks
==786410==      possibly lost: 0 bytes in 0 blocks
==786410==    still reachable: 0 bytes in 0 blocks
==786410==         suppressed: 0 bytes in 0 blocks
==786410== 
==786410== For lists of detected and suppressed errors, rerun with: -s
==786410== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)

