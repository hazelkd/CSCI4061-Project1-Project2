(TEST 10) cmd_update_1
COMMENTS:

program: ./test_cmd cmd_update_1
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-10-expect.tmp
- Actual output in: test-results/raw/functions-10-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                         ==== ACTUAL ====                                                      
{                                                                        {
    // Tests whether cmd_update() correctly checks                           // Tests whether cmd_update() correctly checks
    // on a running command and blocks the calling                           // on a running command and blocks the calling
    // process until the cmd is finished. Then checks                        // process until the cmd is finished. Then checks
    // that the cmd_t is updated correctly based on                          // that the cmd_t is updated correctly based on
    // completion of the cmd.                                                // completion of the cmd.
    char *argv[] = {                                                         char *argv[] = {
      "cat",                                                                   "cat",
      "test_data/quote.txt",                                                   "test_data/quote.txt",
      "test_data/gettysburg.txt",                                              "test_data/gettysburg.txt",
      NULL                                                                     NULL
    };                                                                       };
    cmd_t *cmd = cmd_new(argv);                                              cmd_t *cmd = cmd_new(argv);
    cmd_start(cmd);                // start running                          cmd_start(cmd);                // start running
    cmd_update_state(cmd,DOBLOCK); // wait for completion                    cmd_update_state(cmd,DOBLOCK); // wait for completion
                                   // should see an alert                                                   // should see an alert
    test_print_cmd(cmd);           // show completed cmd                     test_print_cmd(cmd);           // show completed cmd
    cmd_free(cmd);                                                           cmd_free(cmd);
}                                                                        }
cmd->name: cat                                                         <
cmd->argv[]:                                                           <
  [  0] : cat                                                          <
  [  1] : test_data/quote.txt                                          <
  [  2] : test_data/gettysburg.txt                                     <
  [  3] : (null)                                                       <
cmd->pid > 0 : yes                                                     <
cmd->pid: %0                                                           <
cmd->out_pipe[PREAD]  > 0: yes                                         <
cmd->out_pipe[PWRITE] > 0: yes                                         <
cmd->status: 0                                                         <
cmd->str_status: EXIT(0)                                               <
cmd->finished: 1                                                       <
cmd->output_size: 1636                                                 <
cmd->output:                                                           <
Object-oriented programming is an exceptionally bad idea which could   <
only have originated in California.                                    <
                                                                       <
-- Edsger Dijkstra                                                     <
Four score and seven years ago our fathers brought forth on this       <
continent, a new nation, conceived in Liberty, and dedicated to the    <
proposition that all men are created equal.                            <
                                                                       <
Now we are engaged in a great civil war, testing whether that nation,  <
or any nation so conceived and so dedicated, can long endure. We are   <
met on a great battle-field of that war. We have come to dedicate a    <
portion of that field, as a final resting place for those who here     <
gave their lives that that nation might live. It is altogether fitting <
and proper that we should do this.                                     <
                                                                       <
But, in a larger sense, we can not dedicate -- we can not consecrate   <
-- we can not hallow -- this ground. The brave men, living and dead,   <
who struggled here, have consecrated it, far above our poor power to   <
add or detract. The world will little note, nor long remember what we  <
say here, but it can never forget what they did here. It is for us the <
living, rather, to be dedicated here to the unfinished work which they <
who fought here have thus far so nobly advanced. It is rather for us   <
to be here dedicated to the great task remaining before us -- that     <
from these honored dead we take increased devotion to that cause for   <
which they gave the last full measure of devotion -- that we here      <
highly resolve that these dead shall not have died in vain -- that     <
this nation, under God, shall have a new birth of freedom -- and that  <
government of the people, by the people, for the people, shall not     <
perish from the earth.                                                 <
                                                                       <
Abraham Lincoln                                                        <
November 19, 1863                                                      <
                                                                       <
ALERTS:                                                                  ALERTS:
@!!! cat[%0]: EXIT(0)                                                  <
--- Line Differences ---
EXPECT:  20) cmd->name: cat
EXPECT:  21) cmd->argv[]:
EXPECT:  22)   [  0] : cat
EXPECT:  23)   [  1] : test_data/quote.txt
EXPECT:  24)   [  2] : test_data/gettysburg.txt
EXPECT:  25)   [  3] : (null)
EXPECT:  26) cmd->pid > 0 : yes
EXPECT:  27) cmd->pid: %0
EXPECT:  28) cmd->out_pipe[PREAD]  > 0: yes
EXPECT:  29) cmd->out_pipe[PWRITE] > 0: yes
EXPECT:  30) cmd->status: 0
EXPECT:  31) cmd->str_status: EXIT(0)
EXPECT:  32) cmd->finished: 1
EXPECT:  33) cmd->output_size: 1636
EXPECT:  34) cmd->output:
EXPECT:  35) Object-oriented programming is an exceptionally bad idea which could
EXPECT:  36) only have originated in California.
EXPECT:  37) 
EXPECT:  38) -- Edsger Dijkstra
EXPECT:  39) Four score and seven years ago our fathers brought forth on this
EXPECT:  40) continent, a new nation, conceived in Liberty, and dedicated to the
EXPECT:  41) proposition that all men are created equal.
EXPECT:  42) 
EXPECT:  43) Now we are engaged in a great civil war, testing whether that nation,
EXPECT:  44) or any nation so conceived and so dedicated, can long endure. We are
EXPECT:  45) met on a great battle-field of that war. We have come to dedicate a
EXPECT:  46) portion of that field, as a final resting place for those who here
EXPECT:  47) gave their lives that that nation might live. It is altogether fitting
EXPECT:  48) and proper that we should do this.
EXPECT:  49) 
EXPECT:  50) But, in a larger sense, we can not dedicate -- we can not consecrate
EXPECT:  51) -- we can not hallow -- this ground. The brave men, living and dead,
EXPECT:  52) who struggled here, have consecrated it, far above our poor power to
EXPECT:  53) add or detract. The world will little note, nor long remember what we
EXPECT:  54) say here, but it can never forget what they did here. It is for us the
EXPECT:  55) living, rather, to be dedicated here to the unfinished work which they
EXPECT:  56) who fought here have thus far so nobly advanced. It is rather for us
EXPECT:  57) to be here dedicated to the great task remaining before us -- that
EXPECT:  58) from these honored dead we take increased devotion to that cause for
EXPECT:  59) which they gave the last full measure of devotion -- that we here
EXPECT:  60) highly resolve that these dead shall not have died in vain -- that
EXPECT:  61) this nation, under God, shall have a new birth of freedom -- and that
EXPECT:  62) government of the people, by the people, for the people, shall not
EXPECT:  63) perish from the earth.
EXPECT:  64) 
EXPECT:  65) Abraham Lincoln
EXPECT:  66) November 19, 1863
EXPECT:  67) 
EXPECT:  69) @!!! cat[%0]: EXIT(0)

--- Valgrind Log from: test-results/raw/functions-10-valgrd.tmp ---
==2845091== Memcheck, a memory error detector
==2845091== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2845091== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2845091== Command: ./test_cmd cmd_update_1
==2845091== Parent PID: 2845090
==2845091== 
==2845091== Invalid write of size 8
==2845091==    at 0x10B26B: cmd_new (cmd.c:7)
==2845091==    by 0x10A11A: main (test_cmd.c:247)
==2845091==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2845091== 
==2845091== 
==2845091== Process terminating with default action of signal 11 (SIGSEGV)
==2845091==  Access not within mapped region at address 0x100
==2845091==    at 0x10B26B: cmd_new (cmd.c:7)
==2845091==    by 0x10A11A: main (test_cmd.c:247)
==2845091==  If you believe this happened as a result of a stack
==2845091==  overflow in your program's main thread (unlikely but
==2845091==  possible), you can try to increase the size of the
==2845091==  main thread stack using the --main-stacksize= flag.
==2845091==  The main thread stack size used in this run was 8388608.
==2845091== 
==2845091== HEAP SUMMARY:
==2845091==     in use at exit: 9 bytes in 1 blocks
==2845091==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2845091== 
==2845091== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2845091==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2845091==    by 0x10B263: cmd_new (cmd.c:7)
==2845091==    by 0x10A11A: main (test_cmd.c:247)
==2845091== 
==2845091== LEAK SUMMARY:
==2845091==    definitely lost: 9 bytes in 1 blocks
==2845091==    indirectly lost: 0 bytes in 0 blocks
==2845091==      possibly lost: 0 bytes in 0 blocks
==2845091==    still reachable: 0 bytes in 0 blocks
==2845091==         suppressed: 0 bytes in 0 blocks
==2845091== 
==2845091== For lists of detected and suppressed errors, rerun with: -s
==2845091== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

