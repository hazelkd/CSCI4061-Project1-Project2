(TEST 19) cmdcol_print_1
COMMENTS:

program: ./test_cmd cmdcol_print_1
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-19-expect.tmp
- Actual output in: test-results/raw/functions-19-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                ==== ACTUAL ====                                             
{                                                               {
    // Adds to a cmd collection then calls cmdcol_print()           // Adds to a cmd collection then calls cmdcol_print()
    // to show the state of the cmds prior to running.              // to show the state of the cmds prior to running.
    char *children[][5] = {                                         char *children[][5] = {
      {"cat","test_data/quote.txt",NULL},                             {"cat","test_data/quote.txt",NULL},    
      {"ls","-a","test_data/stuff",NULL},                             {"ls","-a","test_data/stuff",NULL},
      {"ls","-a","-F","test_data/stuff",NULL},                        {"ls","-a","-F","test_data/stuff",NULL},
      {NULL},                                                         {NULL},
    };                                                              };
    cmdcol_t cmdcol_actual = {};                                    cmdcol_t cmdcol_actual = {};
    cmdcol_t *cmdcol = &cmdcol_actual;                              cmdcol_t *cmdcol = &cmdcol_actual;
    for(int i=0; children[i][0] != NULL; i++){                      for(int i=0; children[i][0] != NULL; i++){
      cmd_t *cmd = cmd_new(children[i]);                              cmd_t *cmd = cmd_new(children[i]);
      cmdcol_add(cmdcol, cmd);                                        cmdcol_add(cmdcol, cmd);
    }                                                               }
    cmdcol_print(cmdcol);                                           cmdcol_print(cmdcol);
    cmdcol_freeall(cmdcol);                                         cmdcol_freeall(cmdcol);
}                                                               }
JOB  #PID      STAT   STR_STAT OUTB COMMAND                   <
0    #-1         -1       INIT   -1 cat test_data/quote.txt   <
1    #-1         -1       INIT   -1 ls -a test_data/stuff     <
2    #-1         -1       INIT   -1 ls -a -F test_data/stuff  <
ALERTS:                                                         ALERTS:
                                                              (
--- Line Differences ---
EXPECT:  19) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:  20) 0    #-1         -1       INIT   -1 cat test_data/quote.txt 
EXPECT:  21) 1    #-1         -1       INIT   -1 ls -a test_data/stuff 
EXPECT:  22) 2    #-1         -1       INIT   -1 ls -a -F test_data/stuff 

--- Valgrind Log from: test-results/raw/functions-19-valgrd.tmp ---
==2845471== Memcheck, a memory error detector
==2845471== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2845471== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2845471== Command: ./test_cmd cmdcol_print_1
==2845471== Parent PID: 2845470
==2845471== 
==2845471== Invalid write of size 8
==2845471==    at 0x10B26B: cmd_new (cmd.c:7)
==2845471==    by 0x10AF16: main (test_cmd.c:454)
==2845471==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2845471== 
==2845471== 
==2845471== Process terminating with default action of signal 11 (SIGSEGV)
==2845471==  Access not within mapped region at address 0x100
==2845471==    at 0x10B26B: cmd_new (cmd.c:7)
==2845471==    by 0x10AF16: main (test_cmd.c:454)
==2845471==  If you believe this happened as a result of a stack
==2845471==  overflow in your program's main thread (unlikely but
==2845471==  possible), you can try to increase the size of the
==2845471==  main thread stack using the --main-stacksize= flag.
==2845471==  The main thread stack size used in this run was 8388608.
==2845471== 
==2845471== HEAP SUMMARY:
==2845471==     in use at exit: 9 bytes in 1 blocks
==2845471==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2845471== 
==2845471== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2845471==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2845471==    by 0x10B263: cmd_new (cmd.c:7)
==2845471==    by 0x10AF16: main (test_cmd.c:454)
==2845471== 
==2845471== LEAK SUMMARY:
==2845471==    definitely lost: 9 bytes in 1 blocks
==2845471==    indirectly lost: 0 bytes in 0 blocks
==2845471==      possibly lost: 0 bytes in 0 blocks
==2845471==    still reachable: 0 bytes in 0 blocks
==2845471==         suppressed: 0 bytes in 0 blocks
==2845471== 
==2845471== For lists of detected and suppressed errors, rerun with: -s
==2845471== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

