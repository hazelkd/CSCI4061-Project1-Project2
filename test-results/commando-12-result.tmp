(TEST 12) wait-all
COMMENTS:
Start several independent jobs then 'wait-all' for them to complete
before reporting their results via 'output-all'.


program: ./commando --echo
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-12-expect.tmp
- Actual output in: test-results/raw/commando-12-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                                          ==== ACTUAL ====                                                                       
@> ls -a -F test_data/stuff/                                                            <
@> cat test_data/quote.txt                                                              <
@> cat test_data/gettysburg.txt                                                         <
@> gcc -o test_data/print_args test_data/print_args.c                                   <
@> wait-all                                                                             <
@> list                                                                                 <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                             <
0    %0           0    EXIT(0)   55 ls -a -F test_data/stuff/                           <
1    %1           0    EXIT(0)  125 cat test_data/quote.txt                             <
2    %2           0    EXIT(0) 1511 cat test_data/gettysburg.txt                        <
3    %3           0    EXIT(0)    0 gcc -o test_data/print_args test_data/print_args.c  <
@> output-all                                                                           <
@<<< Output for ls[%0] (55 bytes):                                                      <
----------------------------------------                                                <
./                                                                                      <
../                                                                                     <
empty                                                                                   <
gettysburg.txt                                                                          <
quote.txt                                                                               <
table.sh*                                                                               <
util.o                                                                                  <
----------------------------------------                                                <
@<<< Output for cat[%1] (125 bytes):                                                    <
----------------------------------------                                                <
Object-oriented programming is an exceptionally bad idea which could                    <
only have originated in California.                                                     <
                                                                                        <
-- Edsger Dijkstra                                                                      <
----------------------------------------                                                <
@<<< Output for cat[%2] (1511 bytes):                                                   <
----------------------------------------                                                <
Four score and seven years ago our fathers brought forth on this                        <
continent, a new nation, conceived in Liberty, and dedicated to the                     <
proposition that all men are created equal.                                             <
                                                                                        <
Now we are engaged in a great civil war, testing whether that nation,                   <
or any nation so conceived and so dedicated, can long endure. We are                    <
met on a great battle-field of that war. We have come to dedicate a                     <
portion of that field, as a final resting place for those who here                      <
gave their lives that that nation might live. It is altogether fitting                  <
and proper that we should do this.                                                      <
                                                                                        <
But, in a larger sense, we can not dedicate -- we can not consecrate                    <
-- we can not hallow -- this ground. The brave men, living and dead,                    <
who struggled here, have consecrated it, far above our poor power to                    <
add or detract. The world will little note, nor long remember what we                   <
say here, but it can never forget what they did here. It is for us the                  <
living, rather, to be dedicated here to the unfinished work which they                  <
who fought here have thus far so nobly advanced. It is rather for us                    <
to be here dedicated to the great task remaining before us -- that                      <
from these honored dead we take increased devotion to that cause for                    <
which they gave the last full measure of devotion -- that we here                       <
highly resolve that these dead shall not have died in vain -- that                      <
this nation, under God, shall have a new birth of freedom -- and that                   <
government of the people, by the people, for the people, shall not                      <
perish from the earth.                                                                  <
                                                                                        <
Abraham Lincoln                                                                         <
November 19, 1863                                                                       <
----------------------------------------                                                <
@<<< Output for gcc[%3] (0 bytes):                                                      <
----------------------------------------                                                <
----------------------------------------                                                <
@> exit                                                                                 <
ALERTS:                                                                                   ALERTS:
@!!! ls[%0]: EXIT(0)                                                                    <
@!!! cat[%1]: EXIT(0)                                                                   <
@!!! cat[%2]: EXIT(0)                                                                   <
@!!! gcc[%3]: EXIT(0)                                                                   <
--- Line Differences ---
EXPECT:   1) @> ls -a -F test_data/stuff/
EXPECT:   2) @> cat test_data/quote.txt
EXPECT:   3) @> cat test_data/gettysburg.txt
EXPECT:   4) @> gcc -o test_data/print_args test_data/print_args.c
EXPECT:   5) @> wait-all
EXPECT:   6) @> list
EXPECT:   7) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:   8) 0    %0           0    EXIT(0)   55 ls -a -F test_data/stuff/ 
EXPECT:   9) 1    %1           0    EXIT(0)  125 cat test_data/quote.txt 
EXPECT:  10) 2    %2           0    EXIT(0) 1511 cat test_data/gettysburg.txt 
EXPECT:  11) 3    %3           0    EXIT(0)    0 gcc -o test_data/print_args test_data/print_args.c 
EXPECT:  12) @> output-all 
EXPECT:  13) @<<< Output for ls[%0] (55 bytes):
EXPECT:  14) ----------------------------------------
EXPECT:  15) ./
EXPECT:  16) ../
EXPECT:  17) empty
EXPECT:  18) gettysburg.txt
EXPECT:  19) quote.txt
EXPECT:  20) table.sh*
EXPECT:  21) util.o
EXPECT:  22) ----------------------------------------
EXPECT:  23) @<<< Output for cat[%1] (125 bytes):
EXPECT:  24) ----------------------------------------
EXPECT:  25) Object-oriented programming is an exceptionally bad idea which could
EXPECT:  26) only have originated in California.
EXPECT:  27) 
EXPECT:  28) -- Edsger Dijkstra
EXPECT:  29) ----------------------------------------
EXPECT:  30) @<<< Output for cat[%2] (1511 bytes):
EXPECT:  31) ----------------------------------------
EXPECT:  32) Four score and seven years ago our fathers brought forth on this
EXPECT:  33) continent, a new nation, conceived in Liberty, and dedicated to the
EXPECT:  34) proposition that all men are created equal.
EXPECT:  35) 
EXPECT:  36) Now we are engaged in a great civil war, testing whether that nation,
EXPECT:  37) or any nation so conceived and so dedicated, can long endure. We are
EXPECT:  38) met on a great battle-field of that war. We have come to dedicate a
EXPECT:  39) portion of that field, as a final resting place for those who here
EXPECT:  40) gave their lives that that nation might live. It is altogether fitting
EXPECT:  41) and proper that we should do this.
EXPECT:  42) 
EXPECT:  43) But, in a larger sense, we can not dedicate -- we can not consecrate
EXPECT:  44) -- we can not hallow -- this ground. The brave men, living and dead,
EXPECT:  45) who struggled here, have consecrated it, far above our poor power to
EXPECT:  46) add or detract. The world will little note, nor long remember what we
EXPECT:  47) say here, but it can never forget what they did here. It is for us the
EXPECT:  48) living, rather, to be dedicated here to the unfinished work which they
EXPECT:  49) who fought here have thus far so nobly advanced. It is rather for us
EXPECT:  50) to be here dedicated to the great task remaining before us -- that
EXPECT:  51) from these honored dead we take increased devotion to that cause for
EXPECT:  52) which they gave the last full measure of devotion -- that we here
EXPECT:  53) highly resolve that these dead shall not have died in vain -- that
EXPECT:  54) this nation, under God, shall have a new birth of freedom -- and that
EXPECT:  55) government of the people, by the people, for the people, shall not
EXPECT:  56) perish from the earth.
EXPECT:  57) 
EXPECT:  58) Abraham Lincoln
EXPECT:  59) November 19, 1863
EXPECT:  60) ----------------------------------------
EXPECT:  61) @<<< Output for gcc[%3] (0 bytes):
EXPECT:  62) ----------------------------------------
EXPECT:  63) ----------------------------------------
EXPECT:  64) @> exit
EXPECT:  66) @!!! ls[%0]: EXIT(0)
EXPECT:  67) @!!! cat[%1]: EXIT(0)
EXPECT:  68) @!!! cat[%2]: EXIT(0)
EXPECT:  69) @!!! gcc[%3]: EXIT(0)

--- Valgrind Log from: test-results/raw/commando-12-valgrd.tmp ---
==515812== Memcheck, a memory error detector
==515812== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==515812== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==515812== Command: ./commando --echo
==515812== Parent PID: 515811
==515812== 
==515812== Conditional jump or move depends on uninitialised value(s)
==515812==    at 0x109A7F: cmd_new (cmd.c:12)
==515812==    by 0x10954C: main (commando.c:13)
==515812==  Uninitialised value was created by a stack allocation
==515812==    at 0x1094D9: main (commando.c:6)
==515812== 
==515812== Conditional jump or move depends on uninitialised value(s)
==515812==    at 0x109AE4: cmd_new (cmd.c:21)
==515812==    by 0x10954C: main (commando.c:13)
==515812==  Uninitialised value was created by a stack allocation
==515812==    at 0x1094D9: main (commando.c:6)
==515812== 
==515812== Invalid read of size 4
==515812==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==515812==    by 0x10956C: main (commando.c:14)
==515812==  Address 0x2000 is not stack'd, malloc'd or (recently) free'd
==515812== 
==515812== 
==515812== Process terminating with default action of signal 11 (SIGSEGV)
==515812==  Access not within mapped region at address 0x2000
==515812==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==515812==    by 0x10956C: main (commando.c:14)
==515812==  If you believe this happened as a result of a stack
==515812==  overflow in your program's main thread (unlikely but
==515812==  possible), you can try to increase the size of the
==515812==  main thread stack using the --main-stacksize= flag.
==515812==  The main thread stack size used in this run was 8388608.
==515812== 
==515812== HEAP SUMMARY:
==515812==     in use at exit: 2,352 bytes in 1 blocks
==515812==   total heap usage: 1 allocs, 0 frees, 2,352 bytes allocated
==515812== 
==515812== 2,352 bytes in 1 blocks are still reachable in loss record 1 of 1
==515812==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==515812==    by 0x109A50: cmd_new (cmd.c:8)
==515812==    by 0x10954C: main (commando.c:13)
==515812== 
==515812== LEAK SUMMARY:
==515812==    definitely lost: 0 bytes in 0 blocks
==515812==    indirectly lost: 0 bytes in 0 blocks
==515812==      possibly lost: 0 bytes in 0 blocks
==515812==    still reachable: 2,352 bytes in 1 blocks
==515812==         suppressed: 0 bytes in 0 blocks
==515812== 
==515812== For lists of detected and suppressed errors, rerun with: -s
==515812== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

