(TEST 3) cmd_new_3
COMMENTS:

program: ./test_cmd cmd_new_3
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-03-expect.tmp
- Actual output in: test-results/raw/functions-03-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                  ==== ACTUAL ====                               
{                                                 {
    // Tests creation and init of a cmd_t along       // Tests creation and init of a cmd_t along
    // with cmd_free() to deallocate it               // with cmd_free() to deallocate it
    char *argv[] = {                                  char *argv[] = {
      "ls",                                             "ls",
      "-F",                                             "-F",
      "-a ",                                            "-a ",
      "-1",                                             "-1",
      "test_data/stuff",                                "test_data/stuff",
      NULL                                              NULL
    };                                                };
    cmd_t *cmd = cmd_new(argv);                       cmd_t *cmd = cmd_new(argv);
    test_print_cmd(cmd);                              test_print_cmd(cmd);
    assert_pointers_unique(argv, cmd);                assert_pointers_unique(argv, cmd);
    cmd_free(cmd);                                    cmd_free(cmd);
}                                                 }
cmd->name: ls                                   <
cmd->argv[]:                                    <
  [  0] : ls                                    <
  [  1] : -F                                    <
  [  2] : -a                                    <
  [  3] : -1                                    <
  [  4] : test_data/stuff                       <
  [  5] : (null)                                <
cmd->pid > 0 : no                               <
cmd->pid: #-1                                   <
cmd->out_pipe[PREAD]  > 0: no                   <
cmd->out_pipe[PWRITE] > 0: no                   <
cmd->status: -1                                 <
cmd->str_status: INIT                           <
cmd->finished: 0                                <
cmd->output_size: -1                            <
cmd->output:                                    <
(null)                                          <
ALERTS:                                           ALERTS:
                                                (
--- Line Differences ---
EXPECT:  17) cmd->name: ls
EXPECT:  18) cmd->argv[]:
EXPECT:  19)   [  0] : ls
EXPECT:  20)   [  1] : -F
EXPECT:  21)   [  2] : -a 
EXPECT:  22)   [  3] : -1
EXPECT:  23)   [  4] : test_data/stuff
EXPECT:  24)   [  5] : (null)
EXPECT:  25) cmd->pid > 0 : no
EXPECT:  26) cmd->pid: #-1
EXPECT:  27) cmd->out_pipe[PREAD]  > 0: no
EXPECT:  28) cmd->out_pipe[PWRITE] > 0: no
EXPECT:  29) cmd->status: -1
EXPECT:  30) cmd->str_status: INIT
EXPECT:  31) cmd->finished: 0
EXPECT:  32) cmd->output_size: -1
EXPECT:  33) cmd->output:
EXPECT:  34) (null)

--- Valgrind Log from: test-results/raw/functions-03-valgrd.tmp ---
==2844802== Memcheck, a memory error detector
==2844802== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2844802== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2844802== Command: ./test_cmd cmd_new_3
==2844802== Parent PID: 2844801
==2844802== 
==2844802== Invalid write of size 8
==2844802==    at 0x10B26B: cmd_new (cmd.c:7)
==2844802==    by 0x1099C7: main (test_cmd.c:97)
==2844802==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2844802== 
==2844802== 
==2844802== Process terminating with default action of signal 11 (SIGSEGV)
==2844802==  Access not within mapped region at address 0x100
==2844802==    at 0x10B26B: cmd_new (cmd.c:7)
==2844802==    by 0x1099C7: main (test_cmd.c:97)
==2844802==  If you believe this happened as a result of a stack
==2844802==  overflow in your program's main thread (unlikely but
==2844802==  possible), you can try to increase the size of the
==2844802==  main thread stack using the --main-stacksize= flag.
==2844802==  The main thread stack size used in this run was 8388608.
==2844802== 
==2844802== HEAP SUMMARY:
==2844802==     in use at exit: 9 bytes in 1 blocks
==2844802==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2844802== 
==2844802== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2844802==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2844802==    by 0x10B263: cmd_new (cmd.c:7)
==2844802==    by 0x1099C7: main (test_cmd.c:97)
==2844802== 
==2844802== LEAK SUMMARY:
==2844802==    definitely lost: 9 bytes in 1 blocks
==2844802==    indirectly lost: 0 bytes in 0 blocks
==2844802==      possibly lost: 0 bytes in 0 blocks
==2844802==    still reachable: 0 bytes in 0 blocks
==2844802==         suppressed: 0 bytes in 0 blocks
==2844802== 
==2844802== For lists of detected and suppressed errors, rerun with: -s
==2844802== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

