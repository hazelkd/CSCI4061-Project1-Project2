(TEST 14) cmd_print_output_2
COMMENTS:

program: ./test_cmd cmd_print_output_2
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/functions-14-expect.tmp
- Actual output in: test-results/raw/functions-14-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                         ==== ACTUAL ====                                                      
{                                                                        {
    // Tests whether cmd_print_output() correctly                            // Tests whether cmd_print_output() correctly
    // captures and prints a completed command's output.                     // captures and prints a completed command's output.
    char *argv[] = {                                                         char *argv[] = {
      "grep",                                                                  "grep",
      "-i",                                                                    "-i",
      "the ",                                                                  "the ",
      "test_data/gettysburg.txt",                                              "test_data/gettysburg.txt",
      NULL                                                                     NULL
    };                                                                       };
    cmd_t *cmd = cmd_new(argv);                                              cmd_t *cmd = cmd_new(argv);
    cmd_start(cmd);                // start running                          cmd_start(cmd);                // start running
    cmd_update_state(cmd,DOBLOCK); // wait for completion                    cmd_update_state(cmd,DOBLOCK); // wait for completion
                                   // should see an alert                                                   // should see an alert
    cmd_print_output(cmd);                                                   cmd_print_output(cmd);
    cmd_free(cmd);                                                           cmd_free(cmd);
}                                                                        }
-- we can not hallow -- this ground. The brave men, living and dead,   <
add or detract. The world will little note, nor long remember what we  <
living, rather, to be dedicated here to the unfinished work which they <
to be here dedicated to the great task remaining before us -- that     <
which they gave the last full measure of devotion -- that we here      <
government of the people, by the people, for the people, shall not     <
perish from the earth.                                                 <
ALERTS:                                                                  ALERTS:
@!!! grep[%0]: EXIT(0)                                                 <
                                                                       <
--- Line Differences ---
EXPECT:  18) -- we can not hallow -- this ground. The brave men, living and dead,
EXPECT:  19) add or detract. The world will little note, nor long remember what we
EXPECT:  20) living, rather, to be dedicated here to the unfinished work which they
EXPECT:  21) to be here dedicated to the great task remaining before us -- that
EXPECT:  22) which they gave the last full measure of devotion -- that we here
EXPECT:  23) government of the people, by the people, for the people, shall not
EXPECT:  24) perish from the earth.
EXPECT:  26) @!!! grep[%0]: EXIT(0)
EXPECT:  27) 

--- Valgrind Log from: test-results/raw/functions-14-valgrd.tmp ---
==2845257== Memcheck, a memory error detector
==2845257== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2845257== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2845257== Command: ./test_cmd cmd_print_output_2
==2845257== Parent PID: 2845256
==2845257== 
==2845257== Invalid write of size 8
==2845257==    at 0x10B26B: cmd_new (cmd.c:7)
==2845257==    by 0x10A4D8: main (test_cmd.c:330)
==2845257==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==2845257== 
==2845257== 
==2845257== Process terminating with default action of signal 11 (SIGSEGV)
==2845257==  Access not within mapped region at address 0x100
==2845257==    at 0x10B26B: cmd_new (cmd.c:7)
==2845257==    by 0x10A4D8: main (test_cmd.c:330)
==2845257==  If you believe this happened as a result of a stack
==2845257==  overflow in your program's main thread (unlikely but
==2845257==  possible), you can try to increase the size of the
==2845257==  main thread stack using the --main-stacksize= flag.
==2845257==  The main thread stack size used in this run was 8388608.
==2845257== 
==2845257== HEAP SUMMARY:
==2845257==     in use at exit: 9 bytes in 1 blocks
==2845257==   total heap usage: 1 allocs, 0 frees, 9 bytes allocated
==2845257== 
==2845257== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2845257==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==2845257==    by 0x10B263: cmd_new (cmd.c:7)
==2845257==    by 0x10A4D8: main (test_cmd.c:330)
==2845257== 
==2845257== LEAK SUMMARY:
==2845257==    definitely lost: 9 bytes in 1 blocks
==2845257==    indirectly lost: 0 bytes in 0 blocks
==2845257==      possibly lost: 0 bytes in 0 blocks
==2845257==    still reachable: 0 bytes in 0 blocks
==2845257==         suppressed: 0 bytes in 0 blocks
==2845257== 
==2845257== For lists of detected and suppressed errors, rerun with: -s
==2845257== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

