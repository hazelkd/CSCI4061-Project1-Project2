==515677== Memcheck, a memory error detector
==515677== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==515677== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==515677== Command: ./commando --echo
==515677== Parent PID: 515676
==515677== 
==515677== Conditional jump or move depends on uninitialised value(s)
==515677==    at 0x109A7F: cmd_new (cmd.c:12)
==515677==    by 0x10954C: main (commando.c:13)
==515677==  Uninitialised value was created by a stack allocation
==515677==    at 0x1094D9: main (commando.c:6)
==515677== 
==515677== Conditional jump or move depends on uninitialised value(s)
==515677==    at 0x109AE4: cmd_new (cmd.c:21)
==515677==    by 0x10954C: main (commando.c:13)
==515677==  Uninitialised value was created by a stack allocation
==515677==    at 0x1094D9: main (commando.c:6)
==515677== 
==515677== Invalid read of size 4
==515677==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==515677==    by 0x10956C: main (commando.c:14)
==515677==  Address 0x2000 is not stack'd, malloc'd or (recently) free'd
==515677== 
==515677== 
==515677== Process terminating with default action of signal 11 (SIGSEGV)
==515677==  Access not within mapped region at address 0x2000
==515677==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==515677==    by 0x10956C: main (commando.c:14)
==515677==  If you believe this happened as a result of a stack
==515677==  overflow in your program's main thread (unlikely but
==515677==  possible), you can try to increase the size of the
==515677==  main thread stack using the --main-stacksize= flag.
==515677==  The main thread stack size used in this run was 8388608.
==515677== 
==515677== HEAP SUMMARY:
==515677==     in use at exit: 2,352 bytes in 1 blocks
==515677==   total heap usage: 1 allocs, 0 frees, 2,352 bytes allocated
==515677== 
==515677== 2,352 bytes in 1 blocks are still reachable in loss record 1 of 1
==515677==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==515677==    by 0x109A50: cmd_new (cmd.c:8)
==515677==    by 0x10954C: main (commando.c:13)
==515677== 
==515677== LEAK SUMMARY:
==515677==    definitely lost: 0 bytes in 0 blocks
==515677==    indirectly lost: 0 bytes in 0 blocks
==515677==      possibly lost: 0 bytes in 0 blocks
==515677==    still reachable: 2,352 bytes in 1 blocks
==515677==         suppressed: 0 bytes in 0 blocks
==515677== 
==515677== For lists of detected and suppressed errors, rerun with: -s
==515677== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
