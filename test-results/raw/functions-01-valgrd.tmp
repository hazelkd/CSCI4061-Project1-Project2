==3877448== Memcheck, a memory error detector
==3877448== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3877448== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3877448== Command: ./test_cmd cmd_new_1
==3877448== Parent PID: 3877447
==3877448== 
==3877448== Invalid write of size 8
==3877448==    at 0x10B24B: cmd_new (cmd.c:7)
==3877448==    by 0x1097C7: main (test_cmd.c:62)
==3877448==  Address 0x100 is not stack'd, malloc'd or (recently) free'd
==3877448== 
==3877448== 
==3877448== Process terminating with default action of signal 11 (SIGSEGV)
==3877448==  Access not within mapped region at address 0x100
==3877448==    at 0x10B24B: cmd_new (cmd.c:7)
==3877448==    by 0x1097C7: main (test_cmd.c:62)
==3877448==  If you believe this happened as a result of a stack
==3877448==  overflow in your program's main thread (unlikely but
==3877448==  possible), you can try to increase the size of the
==3877448==  main thread stack using the --main-stacksize= flag.
==3877448==  The main thread stack size used in this run was 8388608.
==3877448== 
==3877448== HEAP SUMMARY:
==3877448==     in use at exit: 64 bytes in 1 blocks
==3877448==   total heap usage: 1 allocs, 0 frees, 64 bytes allocated
==3877448== 
==3877448== 64 bytes in 1 blocks are definitely lost in loss record 1 of 1
==3877448==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3877448==    by 0x10B243: cmd_new (cmd.c:7)
==3877448==    by 0x1097C7: main (test_cmd.c:62)
==3877448== 
==3877448== LEAK SUMMARY:
==3877448==    definitely lost: 64 bytes in 1 blocks
==3877448==    indirectly lost: 0 bytes in 0 blocks
==3877448==      possibly lost: 0 bytes in 0 blocks
==3877448==    still reachable: 0 bytes in 0 blocks
==3877448==         suppressed: 0 bytes in 0 blocks
==3877448== 
==3877448== For lists of detected and suppressed errors, rerun with: -s
==3877448== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
