==516224== Memcheck, a memory error detector
==516224== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==516224== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==516224== Command: ./commando --echo
==516224== Parent PID: 516223
==516224== 
==516224== Conditional jump or move depends on uninitialised value(s)
==516224==    at 0x109A7F: cmd_new (cmd.c:12)
==516224==    by 0x10954C: main (commando.c:13)
==516224==  Uninitialised value was created by a stack allocation
==516224==    at 0x1094D9: main (commando.c:6)
==516224== 
==516224== Conditional jump or move depends on uninitialised value(s)
==516224==    at 0x109AE4: cmd_new (cmd.c:21)
==516224==    by 0x10954C: main (commando.c:13)
==516224==  Uninitialised value was created by a stack allocation
==516224==    at 0x1094D9: main (commando.c:6)
==516224== 
==516224== Invalid read of size 4
==516224==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==516224==    by 0x10956C: main (commando.c:14)
==516224==  Address 0x2000 is not stack'd, malloc'd or (recently) free'd
==516224== 
==516224== 
==516224== Process terminating with default action of signal 11 (SIGSEGV)
==516224==  Access not within mapped region at address 0x2000
==516224==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==516224==    by 0x10956C: main (commando.c:14)
==516224==  If you believe this happened as a result of a stack
==516224==  overflow in your program's main thread (unlikely but
==516224==  possible), you can try to increase the size of the
==516224==  main thread stack using the --main-stacksize= flag.
==516224==  The main thread stack size used in this run was 8388608.
==516224== 
==516224== HEAP SUMMARY:
==516224==     in use at exit: 2,352 bytes in 1 blocks
==516224==   total heap usage: 1 allocs, 0 frees, 2,352 bytes allocated
==516224== 
==516224== 2,352 bytes in 1 blocks are still reachable in loss record 1 of 1
==516224==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==516224==    by 0x109A50: cmd_new (cmd.c:8)
==516224==    by 0x10954C: main (commando.c:13)
==516224== 
==516224== LEAK SUMMARY:
==516224==    definitely lost: 0 bytes in 0 blocks
==516224==    indirectly lost: 0 bytes in 0 blocks
==516224==      possibly lost: 0 bytes in 0 blocks
==516224==    still reachable: 2,352 bytes in 1 blocks
==516224==         suppressed: 0 bytes in 0 blocks
==516224== 
==516224== For lists of detected and suppressed errors, rerun with: -s
==516224== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
