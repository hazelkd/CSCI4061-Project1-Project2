(TEST 1) Startup, Help, Exit, and List Built-in
COMMENTS:
Checks whether commando starts up, shows the 'help' message, runs the
'list' built-in which should produce empty output then exits.


program: ./commando --echo
Failure messages:
- FAILURE(139) due to Kill Signal from OS: likely a SEGFAULT occured
- FAILURE: Valgrind reports reachable memory, may need to add free() or fclose()
- FAILURE: Output Mismatch at lines marked

--- Side by Side Differences ---
- Expect output in: test-results/raw/commando-01-expect.tmp
- Actual output in: test-results/raw/commando-01-actual.tmp
- Differing lines have a character like '|' '>' or '<' in the middle
==== EXPECT ====                                                                       ==== ACTUAL ====                                                                    
@> help                                                                              <
COMMANDO COMMANDS                                                                    <
help               : show this message                                               <
exit               : exit the program                                                <
list               : list all jobs that have been started giving information on each <
pause nanos secs   : pause for the given number of nanseconds and seconds            <
output-for int     : print the output for given job number                           <
output-all         : print output for all jobs                                       <
wait-for int       : wait until the given job number finishes                        <
wait-all           : wait for all jobs to finish                                     <
command arg1 ...   : non-built-in is run as a job                                    <
@> list                                                                              <
JOB  #PID      STAT   STR_STAT OUTB COMMAND                                          <
@> exit                                                                              <
ALERTS:                                                                                ALERTS:
--- Line Differences ---
EXPECT:   1) @> help
EXPECT:   2) COMMANDO COMMANDS
EXPECT:   3) help               : show this message
EXPECT:   4) exit               : exit the program
EXPECT:   5) list               : list all jobs that have been started giving information on each
EXPECT:   6) pause nanos secs   : pause for the given number of nanseconds and seconds
EXPECT:   7) output-for int     : print the output for given job number
EXPECT:   8) output-all         : print output for all jobs
EXPECT:   9) wait-for int       : wait until the given job number finishes
EXPECT:  10) wait-all           : wait for all jobs to finish
EXPECT:  11) command arg1 ...   : non-built-in is run as a job
EXPECT:  12) @> list
EXPECT:  13) JOB  #PID      STAT   STR_STAT OUTB COMMAND
EXPECT:  14) @> exit

--- Valgrind Log from: test-results/raw/commando-01-valgrd.tmp ---
==515294== Memcheck, a memory error detector
==515294== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==515294== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==515294== Command: ./commando --echo
==515294== Parent PID: 515293
==515294== 
==515294== Conditional jump or move depends on uninitialised value(s)
==515294==    at 0x109A7F: cmd_new (cmd.c:12)
==515294==    by 0x10954C: main (commando.c:13)
==515294==  Uninitialised value was created by a stack allocation
==515294==    at 0x1094D9: main (commando.c:6)
==515294== 
==515294== Conditional jump or move depends on uninitialised value(s)
==515294==    at 0x109AE4: cmd_new (cmd.c:21)
==515294==    by 0x10954C: main (commando.c:13)
==515294==  Uninitialised value was created by a stack allocation
==515294==    at 0x1094D9: main (commando.c:6)
==515294== 
==515294== Invalid read of size 4
==515294==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==515294==    by 0x10956C: main (commando.c:14)
==515294==  Address 0x2000 is not stack'd, malloc'd or (recently) free'd
==515294== 
==515294== 
==515294== Process terminating with default action of signal 11 (SIGSEGV)
==515294==  Access not within mapped region at address 0x2000
==515294==    at 0x10A09E: cmdcol_add (cmdcol.c:6)
==515294==    by 0x10956C: main (commando.c:14)
==515294==  If you believe this happened as a result of a stack
==515294==  overflow in your program's main thread (unlikely but
==515294==  possible), you can try to increase the size of the
==515294==  main thread stack using the --main-stacksize= flag.
==515294==  The main thread stack size used in this run was 8388608.
==515294== 
==515294== HEAP SUMMARY:
==515294==     in use at exit: 2,352 bytes in 1 blocks
==515294==   total heap usage: 1 allocs, 0 frees, 2,352 bytes allocated
==515294== 
==515294== 2,352 bytes in 1 blocks are still reachable in loss record 1 of 1
==515294==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==515294==    by 0x109A50: cmd_new (cmd.c:8)
==515294==    by 0x10954C: main (commando.c:13)
==515294== 
==515294== LEAK SUMMARY:
==515294==    definitely lost: 0 bytes in 0 blocks
==515294==    indirectly lost: 0 bytes in 0 blocks
==515294==      possibly lost: 0 bytes in 0 blocks
==515294==    still reachable: 2,352 bytes in 1 blocks
==515294==         suppressed: 0 bytes in 0 blocks
==515294== 
==515294== For lists of detected and suppressed errors, rerun with: -s
==515294== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

